"use strict";(self["webpackChunkpolkaswap_exchange_web"]=self["webpackChunkpolkaswap_exchange_web"]||[]).push([[2216],{52216:function(a,s,t){t.r(s),t.d(s,{default:function(){return k}});var e,i=function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("div",{staticClass:"container sora-card"},[t("s-image",{staticClass:"unselectable sora-card__image",attrs:{src:"card/sora-card.png",lazy:"",fit:"cover",draggable:"false"}}),t("div",{staticClass:"sora-card__intro"},[t("h3",{staticClass:"sora-card__intro-title"},[a._v(a._s(a.getCardTitle))]),t("span",{staticClass:"sora-card__intro-info"},[a._v(" "+a._s(a.getCardText)+" ")])]),a.isLoggedIn?t("div",{staticClass:"sora-card__balance-indicator"},[t("s-icon",{staticClass:"sora-card__icon--checked",attrs:{name:"basic-check-mark-24",size:"16px"}}),t("p",{staticClass:"sora-card__balance-indicator-text"},[t("span",{staticClass:"sora-card__balance-indicator-text--bold"},[a._v("€0")]),a._v(" "+a._s(a.feeDesc)+" ")])],1):a._e(),a.isPriceCalculated&&a.isLoggedIn?t("div",{staticClass:"sora-card__balance-indicator"},[t("s-icon",{class:a.getIconClass(),attrs:{name:"basic-check-mark-24",size:"16px"}}),t("p",{staticClass:"sora-card__balance-indicator-text"},[t("span",{staticClass:"sora-card__balance-indicator-text--bold"},[a._v(a._s(a.balanceIndicatorAmount))]),a._v(" "+a._s(a.freeStartUsingDesc)+" ")])],1):a._e(),t("div",{directives:[{name:"loading",rawName:"v-loading",value:a.isLoggedIn&&!a.wasEuroBalanceLoaded,expression:"isLoggedIn && !wasEuroBalanceLoaded"}],staticClass:"sora-card__options"},[a.isEuroBalanceEnough||!a.isLoggedIn?t("div",{staticClass:"sora-card__options--enough-euro"},[t("s-button",{staticClass:"sora-card__btn s-typography-button--large",attrs:{type:"primary",loading:a.btnLoading},on:{click:a.handleConfirm}},[t("span",{staticClass:"text"},[a._v(" "+a._s(a.buttonText))])])],1):t("div",{staticClass:"sora-card__options--not-enough-euro s-flex"},a._l(a.buyOptions,(function(s){return t("s-button",{key:s.type,staticClass:"sora-card__btn sora-card__btn--buy s-typography-button--large",attrs:{type:s.button,loading:a.btnLoading},on:{click:function(t){return a.buyTokens(s.type)}}},[t("span",{staticClass:"text"},[a._v(a._s(s.text))])])})),1)]),a.isLoggedIn?t("span",{staticClass:"sora-card__user-applied",on:{click:a.loginUser}},[a._v(a._s(a.alreadyAppliedText))]):a._e(),t("x1-dialog",{attrs:{visible:a.showX1Dialog},on:{"update:visible":function(s){a.showX1Dialog=s}}}),t("paywings-dialog",{attrs:{visible:a.showPaywingsDialog},on:{"update:visible":function(s){a.showPaywingsDialog=s}}})],1)},o=[],n=t(60760),r=t(70655),c=t(53545),d=t(37365),l=t(74614),g=t(80710),u=t(16546),p=t(85530),_=t(43479),h=t(32806);(function(a){a[a["X1"]=0]="X1",a[a["Bridge"]=1]="Bridge",a[a["Paywings"]=2]="Paywings"})(e||(e={}));const b="100",y="BUY XOR",C="BRIDGE TOKENS",w="GET SORA CARD FOR FREE";let v=class extends((0,c.Wr)(d.tA.LoadingMixin,h.Z)){constructor(...a){super(...a),(0,n.Z)(this,"alreadyAppliedText","I've already applied"),(0,n.Z)(this,"freeStartUsingDesc","of XOR in your account for free start"),(0,n.Z)(this,"feeDesc","annual re-issuance fee"),(0,n.Z)(this,"getCardTitle","Get SORA Card"),(0,n.Z)(this,"getCardText","Top up your SORA Card with fiat or crypto and pay online, in-store or withdraw from an ATM.\n\nGet a Euro IBAN account and a Mastercard Debit Card"),(0,n.Z)(this,"buyOptions",[{type:e.X1,text:y,button:"primary"},{type:e.Bridge,text:C,button:"secondary"}]),(0,n.Z)(this,"euroBalance",void 0),(0,n.Z)(this,"xorToDeposit",void 0),(0,n.Z)(this,"wasEuroBalanceLoaded",void 0),(0,n.Z)(this,"isEuroBalanceEnough",void 0),(0,n.Z)(this,"isLoggedIn",void 0),(0,n.Z)(this,"isPriceCalculated",!1),(0,n.Z)(this,"showX1Dialog",!1),(0,n.Z)(this,"showPaywingsDialog",!1)}get buttonText(){return this.isLoggedIn?w:this.t("connectWalletText")}get balanceIndicatorAmount(){const a=parseInt(this.euroBalance,10);return`€${this.isEuroBalanceEnough?b:a}/${b}`}getIconClass(){return this.isEuroBalanceEnough?"sora-card__icon--checked":""}get btnLoading(){return this.loading||!this.isPriceCalculated}openX1(){this.showX1Dialog=!0}issueCardByPaywings(){this.showPaywingsDialog=!0}bridgeTokens(){this.isEuroBalanceEnough||g.ZP.push({name:u.sn.Bridge,params:{xorToDeposit:this.xorToDeposit.toString()}})}buyTokens(a){switch(a){case e.X1:this.openX1();break;case e.Bridge:this.bridgeTokens();break;case e.Paywings:this.issueCardByPaywings();break}}handleConfirm(){this.isLoggedIn?this.$emit("confirm-apply"):g.ZP.push({name:u.sn.Wallet})}loginUser(){(0,_.JP)();const a=!0;this.$emit("confirm-apply",a)}async priceLoading(){this.isPriceCalculated=!1,await(0,p.gw)(700),this.isPriceCalculated=!0}mounted(){this.priceLoading()}};(0,r.__decorate)([l.SB.soraCard.euroBalance],v.prototype,"euroBalance",void 0),(0,r.__decorate)([l.SB.soraCard.xorToDeposit],v.prototype,"xorToDeposit",void 0),(0,r.__decorate)([l.SB.soraCard.wasEuroBalanceLoaded],v.prototype,"wasEuroBalanceLoaded",void 0),(0,r.__decorate)([l.Yn.soraCard.isEuroBalanceEnough],v.prototype,"isEuroBalanceEnough",void 0),(0,r.__decorate)([l.Yn.wallet.account.isLoggedIn],v.prototype,"isLoggedIn",void 0),v=(0,r.__decorate)([(0,c.wA)({components:{X1Dialog:(0,g.kF)(u.z8.X1Dialog),PaywingsDialog:(0,g.kF)(u.z8.PaywingsDialog)}})],v);var x=v,f=x,B=t(1001),E=(0,B.Z)(f,i,o,!1,null,"0238b21e",null),k=E.exports}}]);